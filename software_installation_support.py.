import os
import subprocess
import sys

def check_package_installed(package_name):
    """Check if a package is installed on the system."""
    print(f"Checking if {package_name} is installed...")
    try:
        result = subprocess.run(
            ["dpkg", "-l", package_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        )
        if result.returncode == 0:
            print(f"{package_name} is already installed.")
            return True
        else:
            print(f"{package_name} is not installed.")
            return False
    except Exception as e:
        print(f"Error while checking for {package_name}: {e}")
        return False

def install_package(package_name):
    """Install a package using apt."""
    print(f"\nAttempting to install {package_name}...")
    try:
        subprocess.run(
            ["sudo", "apt", "update"],
            check=True
        )
        subprocess.run(
            ["sudo", "apt", "install", "-y", package_name],
            check=True
        )
        print(f"{package_name} has been successfully installed.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to install {package_name}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred during installation: {e}")

def upgrade_package(package_name):
    """Upgrade a package to the latest version."""
    print(f"\nAttempting to upgrade {package_name}...")
    try:
        subprocess.run(
            ["sudo", "apt", "update"],
            check=True
        )
        subprocess.run(
            ["sudo", "apt", "install", "--only-upgrade", "-y", package_name],
            check=True
        )
        print(f"{package_name} has been successfully upgraded.")
    except subprocess.CalledProcessError as e:
        print(f"Failed to upgrade {package_name}: {e}")
    except Exception as e:
        print(f"An unexpected error occurred during upgrade: {e}")

def main():
    print("Software Installation and Support Tool")
    print("--------------------------------------")

    if not os.geteuid() == 0:
        print("This script must be run as root. Please rerun using sudo.")
        sys.exit(1)

    package_name = input("\nEnter the name of the package you want to check/install/upgrade: ")

    # Step 1: Check if the package is installed
    is_installed = check_package_installed(package_name)

    # Step 2: Provide options based on package status
    if is_installed:
        print(f"\n{package_name} is already installed.")
        action = input("Would you like to upgrade it to the latest version? (yes/no): ").strip().lower()
        if action == "yes":
            upgrade_package(package_name)
        else:
            print(f"No further action required for {package_name}.")
    else:
        action = input(f"{package_name} is not installed. Would you like to install it? (yes/no): ").strip().lower()
        if action == "yes":
            install_package(package_name)
        else:
            print(f"{package_name} installation skipped.")

    print("\nScript execution complete.")

if __name__ == "__main__":
    main()
